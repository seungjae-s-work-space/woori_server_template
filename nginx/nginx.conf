server {
    listen 443 ssl;
    server_name wooori.shop;

    ssl_certificate /etc/ssl/certs/cloudflare.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://wooori_node_app:${PORT};  # docker의 node.js서버로 프록시요청 전달

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 클라이언트 정보를 백엔드로 전달
        proxy_set_header Host $host; # host인식 유지함. 프록시과정에서 호스트 변경되는걸 방지
        
        proxy_set_header X-Real-IP $remote_addr; # 노드에서 req.headers['x-real-ip]로 최초 클라이언트의 ip확인 가능
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #클라이언트IP랑 요청거쳐온 모든 프록시 ip전달함.
        proxy_set_header X-Forwarded-Proto $scheme; #백엔드가 리디렉션을 할 때, HTTPS에서 HTTP로 리디렉션하는 실수를 방지할 수 있음


        # 캐시 우회 (WebSocket 등)
        proxy_cache_bypass $http_upgrade;

        # 보안 강화 (불필요한 헤더 제거)
        proxy_hide_header X-Powered-By; #X-Powered-By: Express라는 응답헤더 제거. 
        #추가로 보안 강화하려면
        # proxy_hide_header Server;
        # proxy_hide_header X-AspNet-Version;

    }
}

server {
    listen 80;
    server_name wooori.shop;
    
    return 301 https://$host$request_uri;  # HTTP → HTTPS 리디렉션
}
